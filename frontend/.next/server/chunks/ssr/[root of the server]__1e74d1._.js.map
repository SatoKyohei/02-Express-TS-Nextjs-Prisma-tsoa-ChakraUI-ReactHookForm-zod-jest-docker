{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/satoukyouhei/Documents/it/tutorial/express_nextjs_tsoa_prisma/frontend/src/components/ui/color-mode.tsx"],"sourcesContent":["\"use client\";\n\nimport type { IconButtonProps } from \"@chakra-ui/react\";\nimport { ClientOnly, IconButton, Skeleton } from \"@chakra-ui/react\";\nimport { ThemeProvider, useTheme } from \"next-themes\";\nimport type { ThemeProviderProps } from \"next-themes\";\nimport * as React from \"react\";\nimport { LuMoon, LuSun } from \"react-icons/lu\";\n\nexport interface ColorModeProviderProps extends ThemeProviderProps {}\n\nexport function ColorModeProvider(props: ColorModeProviderProps) {\n  return (\n    <ThemeProvider attribute=\"class\" disableTransitionOnChange {...props} />\n  );\n}\n\nexport function useColorMode() {\n  const { resolvedTheme, setTheme } = useTheme();\n  const toggleColorMode = () => {\n    setTheme(resolvedTheme === \"light\" ? \"dark\" : \"light\");\n  };\n  return {\n    colorMode: resolvedTheme,\n    setColorMode: setTheme,\n    toggleColorMode,\n  };\n}\n\nexport function useColorModeValue<T>(light: T, dark: T) {\n  const { colorMode } = useColorMode();\n  return colorMode === \"light\" ? light : dark;\n}\n\nexport function ColorModeIcon() {\n  const { colorMode } = useColorMode();\n  return colorMode === \"light\" ? <LuSun /> : <LuMoon />;\n}\n\ninterface ColorModeButtonProps extends Omit<IconButtonProps, \"aria-label\"> {}\n\nexport const ColorModeButton = React.forwardRef<\n  HTMLButtonElement,\n  ColorModeButtonProps\n>(function ColorModeButton(props, ref) {\n  const { toggleColorMode } = useColorMode();\n  return (\n    <ClientOnly fallback={<Skeleton boxSize=\"8\" />}>\n      <IconButton\n        aria-label=\"Toggle color mode\"\n        onClick={toggleColorMode}\n        ref={ref}\n        size=\"sm\"\n        variant=\"ghost\"\n        {...props}\n        css={{\n          _icon: {\n            width: \"5\",\n            height: \"5\",\n          },\n        }}\n      >\n        <ColorModeIcon />\n      </IconButton>\n    </ClientOnly>\n  );\n});\n"],"names":[],"mappings":";;;;;;;;AAIA;AAEA;AAHA;AAAA;AAAA;AAIA;AAPA;;;;;;AAWO,SAAS,kBAAkB,KAA6B;IAC7D,qBACE,8OAAC,gJAAA,CAAA,gBAAa;QAAC,WAAU;QAAQ,yBAAyB;QAAE,GAAG,KAAK;;;;;;AAExE;AAEO,SAAS;IACd,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAC3C,MAAM,kBAAkB;QACtB,SAAS,kBAAkB,UAAU,SAAS;IAChD;IACA,OAAO;QACL,WAAW;QACX,cAAc;QACd;IACF;AACF;AAEO,SAAS,kBAAqB,KAAQ,EAAE,IAAO;IACpD,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,cAAc,UAAU,QAAQ;AACzC;AAEO,SAAS;IACd,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,cAAc,wBAAU,8OAAC,8IAAA,CAAA,QAAK;;;;6BAAM,8OAAC,8IAAA,CAAA,SAAM;;;;;AACpD;AAIO,MAAM,gCAAkB,sMAAM,UAAU,CAG7C,SAAS,gBAAgB,KAAK,EAAE,GAAG;IACnC,MAAM,EAAE,eAAe,EAAE,GAAG;IAC5B,qBACE,8OAAC,wMAAA,CAAA,aAAU;QAAC,wBAAU,8OAAC,4LAAA,CAAA,WAAQ;YAAC,SAAQ;;;;;;kBACtC,cAAA,8OAAC,gMAAA,CAAA,aAAU;YACT,cAAW;YACX,SAAS;YACT,KAAK;YACL,MAAK;YACL,SAAQ;YACP,GAAG,KAAK;YACT,KAAK;gBACH,OAAO;oBACL,OAAO;oBACP,QAAQ;gBACV;YACF;sBAEA,cAAA,8OAAC;;;;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/satoukyouhei/Documents/it/tutorial/express_nextjs_tsoa_prisma/frontend/src/components/ui/provider.tsx"],"sourcesContent":["\"use client\";\n\nimport { ChakraProvider, defaultSystem } from \"@chakra-ui/react\";\nimport {\n  ColorModeProvider,\n  type ColorModeProviderProps,\n} from \"./color-mode\";\n\nexport function Provider(props: ColorModeProviderProps) {\n  return (\n    <ChakraProvider value={defaultSystem}>\n      <ColorModeProvider {...props} />\n    </ChakraProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AADA;AAAA;AAFA;;;;AAQO,SAAS,SAAS,KAA6B;IACpD,qBACE,8OAAC,sLAAA,CAAA,iBAAc;QAAC,OAAO,gKAAA,CAAA,gBAAa;kBAClC,cAAA,8OAAC,yIAAA,CAAA,oBAAiB;YAAE,GAAG,KAAK;;;;;;;;;;;AAGlC"}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}